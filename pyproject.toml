[tool.poetry]
name = "python-bsblan"
version = "0.0.0"
description = "Asynchronous Python client for BSBLAN API"
authors = ["Willem-Jan van Rootselaar <liudgervr@gmail.com>"]
maintainers = ["Willem-Jan van Rootselaar <liudgervr@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/liudger/python-bsblan"
repository = "https://github.com/liudger/python-bsblan"
documentation = "https://github.com/liudger/python-bsblan"
keywords = ["bsblan", "thermostat", "client" , "api", "async"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 3 - Alpha",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
  { include = "bsblan", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = ">=3.8.1"
yarl = ">=1.7.2"
packaging = ">=21.3"
backoff = "^2.2.1"
async-timeout = "^5.0.0"
mashumaro = "^3.13.1"
orjson = "^3.9.10"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/liudger/python-bsblan/issues"
Changelog = "https://github.com/liudger/python-bsblan/releases"

[tool.poetry.group.dev.dependencies]
covdefaults = "^2.3.0"
ruff = "^0.7.0"
aresponses = "^3.0.0"
black = "^25.0.0"
blacken-docs = "^1.13.0"
coverage = "^7.0.5"
flake8 = "^7.0.0"
isort = "^6.0.0"
mypy = "^1.0.0"
pre-commit = "^4.0.0"
pre-commit-hooks = "^5.0.0"
pylint = "^3.0.0"
pytest = "^8.0.0"
pytest-asyncio = "^0.25.0"
pytest-cov = "^6.0.0"
yamllint = "^1.29.0"
pyupgrade = "^3.3.1"
flake8-simplify = "^0.21.0"
vulture = "^2.7"
darglint = "^1.8.1"
safety = "^3.0.0"
codespell = "^2.2.2"
bandit = "^1.7.4"


[tool.coverage.run]
plugins = ["covdefaults"]
source = ["bsblan"]

[tool.coverage.report]
show_missing = true
fail_under = 53

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
ignore= [
  "tests"
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "on",
    "Run",
    "T",
]

[tool.pylint.DESIGN]
max-attributes = 12

[tool.pylint."MESSAGES CONTROL"]
disable= [
    # "too-few-public-methods",
    "duplicate-code",
    "format",
    "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true
min-similarity-lines = 4  # Minimum lines number of a similarity.

[tool.pylint.FORMAT]
max-line-length=88

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN001", # Self... explanatory
  "ANN002", # cls... Not classy enough
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful

  # Conflicts with the Ruff formatter
  "COM812",
  "ISC001",
]

[tool.ruff.lint.flake8-pytest-style]
mark-parentheses = false
fixture-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["bsblan"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["mashumaro.mixins.orjson.DataClassORJSONMixin"]

[tool.ruff.lint.mccabe]
max-complexity = 25

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
